<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>There And Back</title><link href="http://zemanel.eu/" rel="alternate"></link><link href="http://zemanel.eu/feeds/programming.atom.xml" rel="self"></link><id>http://zemanel.eu/</id><updated>2013-04-20T21:00:00+01:00</updated><entry><title>Auto-posting static site updates from GitHub to Twitter with Zapier</title><link href="http://zemanel.eu/auto-post-static-site-updates-from-github-to-twitter-with-zapier.html" rel="alternate"></link><updated>2013-04-20T21:00:00+01:00</updated><author><name>José Moreira</name></author><id>tag:zemanel.eu,2013-04-20:auto-post-static-site-updates-from-github-to-twitter-with-zapier.html</id><summary type="html">&lt;p&gt;Quickly created a new zap for auto-posting to Twitter when i commit website updates to GitHub &lt;a href="https://Zapier.com"&gt;https://Zapier.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="select services" src="/static/images/2013/04/20/zapier-github-to-twitter-000.png" /&gt;&lt;/p&gt;
&lt;h3&gt;Rundown&lt;/h3&gt;
&lt;p&gt;Selected this website's repo and branch (&lt;a href="https://github.com/zemanel/zemanel.eu/tree/master/"&gt;https://github.com/zemanel/zemanel.eu/tree/master/&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img alt="twitter zap screenshot 001" src="/static/images/2013/04/20/zapier-github-to-twitter-001.png" /&gt;&lt;/p&gt;
&lt;p&gt;and chose a simple and short tweet message. Too bad Twitter is url shortening my site's &lt;a href="http://zemanel.eu"&gt;http://zemanel.eu&lt;/a&gt; URL, it's already short!&lt;/p&gt;
&lt;p&gt;&lt;img alt="twitter zap screenshot 002" src="/static/images/2013/04/20/zapier-github-to-twitter-002.png" /&gt;&lt;/p&gt;
&lt;p&gt;Loaded some sample data and tested it out&lt;/p&gt;
&lt;p&gt;&lt;img alt="twitter zap screenshot 003" src="/static/images/2013/04/20/zapier-github-to-twitter-003.png" /&gt;&lt;/p&gt;
&lt;p&gt;and it's &lt;a href="http://www.youtube.com/watch?v=ljIQo1OHkTI"&gt;alive and kicking&lt;/a&gt; !&lt;/p&gt;
&lt;h3&gt;And this is it, basically&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Yo! Just updated my site http://t.co/73vWqUZjKw&lt;/p&gt;
&lt;p&gt;"update general anchor CSS"&lt;/p&gt;
&lt;p&gt;(via @zapier)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For it to be perfect, just have to improve the commit messages, since &lt;strong&gt;release 0.5.14&lt;/strong&gt; is not that meaningful on Twitter :-)&lt;/p&gt;
&lt;p&gt;The generated content is actually being served from the &lt;em&gt;gh-pages&lt;/em&gt; branch, as i'm using the &lt;code&gt;ghp-import&lt;/code&gt; tool which allows a commit message to be specific.&lt;/p&gt;
&lt;p&gt;Currently just using the defaults, so an improvement point is to specify that commit message manually, for example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; ghp-import -m &lt;span class="s2"&gt;&amp;quot;New blog post about chunky bacon!&amp;quot;&lt;/span&gt; ./_output/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and use the 'gh-pages' branch as source.&lt;/p&gt;
&lt;p&gt;That is all.&lt;/p&gt;</summary><category term="API"></category><category term="Github"></category><category term="Zapier"></category><category term="automation"></category></entry><entry><title>Using Zapier.com to do your dirty little work on the Web</title><link href="http://zemanel.eu/using-zapier-to-do-your-little-dirty-work.html" rel="alternate"></link><updated>2013-04-20T02:00:00+01:00</updated><author><name>José Moreira</name></author><id>tag:zemanel.eu,2013-04-20:using-zapier-to-do-your-little-dirty-work.html</id><summary type="html">&lt;h3&gt;Zapier and me&lt;/h3&gt;
&lt;p&gt;Having read some web buzz about regarding Zapier in the past, only payed attention to it until just recently, when i was contacted by &lt;a href="https://www.paymill.com/en-gb/"&gt;https://www.paymill.com/en-gb/&lt;/a&gt; to help them add their &lt;a href="https://www.paymill.com/en-gb/documentation-3/reference/api-reference/"&gt;REST API&lt;/a&gt; as a &lt;a href="https://zapier.com/developer/reference/#appsummary"&gt;Zapier Service&lt;/a&gt;, since i am a freelancer, &lt;strong&gt;still on a quest to get more work ;-)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;By the way that Service, only for new &lt;a href="https://www.paymill.com/en-gb/documentation-3/reference/api-reference/#transaction-object"&gt;&lt;em&gt;Transaction Successes&lt;/em&gt;&lt;/a&gt; Web Hook &lt;a href="https://www.paymill.com/en-gb/documentation-3/reference/api-reference/#events"&gt;&lt;strong&gt;event&lt;/strong&gt;&lt;/a&gt; at the moment, is well underway and currently going through the Zapier approval process, which will probably be the topic of another post when it's publicly available.&lt;/p&gt;
&lt;p&gt;What brings us here to this post, is exactly this blog, since i am still trying to replace Posterous.com's auto-post feature. For now, i've created a Zap to auto-post to my Twitter account when new posts are available on my &lt;a href="/feeds/all.atom.xml"&gt;RSS feed&lt;/a&gt;, because that's how Zapier rolls, data sources can either be REST API's or regular Atom/RSS feeds.&lt;/p&gt;
&lt;p&gt;Within a Service, &lt;strong&gt;Triggers&lt;/strong&gt; poll data from a data source using &lt;a href="https://zapier.com/developer/reference/#polling"&gt;&lt;em&gt;Poling&lt;/em&gt;&lt;/a&gt;, either on interval or Web Hooks. &lt;strong&gt;Actions&lt;/strong&gt; react to new data items and can perform things related to what the containing Service means to fulfill. For example on the Twitter [Zapier] service, for sure there is an action that receives a body and posts that as a tweet to an account. Connecting my RSS feed to my Twitter account was super easy.&lt;/p&gt;
&lt;h3&gt;Let's roll&lt;/h3&gt;
&lt;p&gt;On my account's Dashboard &lt;a href="https://zapier.com/app/dashboard"&gt;https://zapier.com/app/dashboard&lt;/a&gt; i created a new Zap:&lt;/p&gt;
&lt;p&gt;&lt;img alt="create new zap" src="/static/images/2013/04/20/zapier-create-new-zap.png" /&gt;&lt;/p&gt;
&lt;p&gt;On &lt;strong&gt;step #1&lt;/strong&gt; of the form, selected which &lt;em&gt;Service&lt;/em&gt;s i would like to connect and their correspondent actions, in this case the RSS Service and Twitter.&lt;/p&gt;
&lt;p&gt;&lt;img alt="select services" src="/static/images/2013/04/20/zapier-create-new-zap-select-services.png" /&gt;&lt;/p&gt;
&lt;p&gt;On &lt;strong&gt;step #2&lt;/strong&gt;, there is no [user authentication] account setup required, since i am merely going to use the static RSS URL &lt;/p&gt;
&lt;p&gt;&lt;img alt="select rss account" src="/static/images/2013/04/20/zapier-create-new-zap-rss-account.png" /&gt;&lt;/p&gt;
&lt;p&gt;so i move on to &lt;strong&gt;step #3&lt;/strong&gt; and connect my Twitter account.&lt;/p&gt;
&lt;p&gt;Since i don't have my account already associated on my Zapier account yet, as it keeps track of associated user accounts allowing me to re-use the credentials between zaps, i connect a new one. After going through the Twitter OAuth work-flow, it is good to go:&lt;/p&gt;
&lt;p&gt;&lt;img alt="associate Twitter account" src="/static/images/2013/04/20/zapier-create-new-zap-twitter-account.png" /&gt;&lt;/p&gt;
&lt;p&gt;Configuration of the source RSS URL goes on &lt;strong&gt;step #4&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="configure RSS URL" src="/static/images/2013/04/20/zapier-create-new-zap-rss-configure.png" /&gt;&lt;/p&gt;
&lt;p&gt;and on &lt;strong&gt;step #5&lt;/strong&gt; i set the template for the tweet based on &lt;strong&gt;sample values from the RSS entry&lt;/strong&gt;! Notice how i can preview the result, due to Zapier using sample entries from the feed itself:&lt;/p&gt;
&lt;p&gt;&lt;img alt="fill tweet template" src="/static/images/2013/04/20/zapier-create-new-zap-tweet-tpl.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step #6&lt;/strong&gt; is &lt;a href="http://www.youtube.com/watch?v=yhS9LnDoo_w"&gt;The Test&lt;/a&gt;. Since i've already posted those entries, let's skip it but you get the point. Clicking &lt;strong&gt;Send!&lt;/strong&gt; executes the corresponding Twitter's action and tweets it.&lt;/p&gt;
&lt;p&gt;&lt;img alt="test the zap" src="/static/images/2013/04/20/zapier-create-new-zap-rss-test.png" /&gt;&lt;/p&gt;
&lt;p&gt;By the way, did you notice that &lt;strong&gt;The Test&lt;/strong&gt; was a link for one amazing Chemical Brother video ? You should check it out.&lt;/p&gt;
&lt;p&gt;Wrapping it up, on &lt;strong&gt;step #7&lt;/strong&gt;, we can name out zap&lt;/p&gt;
&lt;p&gt;&lt;img alt="make zap live" src="/static/images/2013/04/20/zapier-create-new-zap-make-live.png" /&gt;&lt;/p&gt;
&lt;p&gt;and click "Make Zap Live". What happens then is that, from that point, the zap becomes active. From the &lt;a href="https://zapier.com/app/dashboard"&gt;https://zapier.com/app/dashboard&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="live zap on the dashboard" src="/static/images/2013/04/20/zapier-create-new-zap-live.png" /&gt;&lt;/p&gt;
&lt;p&gt;Zapier polls for new items every X minutes and when new entries are detected on the RSS, entry data is passed to the Twitter Service Action, which then tweets it after applying the template text we chose. We also have access to the zap's activity history&lt;/p&gt;
&lt;p&gt;&lt;img alt="zap activity history" src="/static/images/2013/04/20/zapier-create-new-zap-rss-history.png" /&gt;&lt;/p&gt;
&lt;h3&gt;To what it all comes down to&lt;/h3&gt;
&lt;p&gt;Is this&lt;/p&gt;
&lt;p&gt;&lt;img alt="end result" src="/static/images/2013/04/20/zapier-create-new-zap-rss-end-result.png" /&gt;&lt;/p&gt;
&lt;p&gt;every time i post something new and my RSS feed is updated, after a few minutes Zapier jumps into action and posts it for me.&lt;/p&gt;
&lt;p&gt;Although i've only scratched the surface, since this was a pretty simple example, and posting to Facebook and Google Plus isn't yet possible (it's possible to post to Facebook Pages but not user wall's it seems), i think they have something good going here and i'm not short of ideas on how to use this, even creating new services (&lt;a href="https://www.openshift.com"&gt;OpenShift&lt;/a&gt; i'm looking at you).&lt;/p&gt;
&lt;h3&gt;That is [almost] all&lt;/h3&gt;
&lt;p&gt;If you got excited and want to try out Zapier, feel free to sign up through my &lt;a href="https://zapier.com/r/iAEC/"&gt;https://zapier.com/r/iAEC/&lt;/a&gt; referral link and get some bonuses together, shall we ? We can get &lt;strong&gt;+100&lt;/strong&gt; tasks per referral, up to &lt;strong&gt;+500&lt;/strong&gt; ;-)&lt;/p&gt;</summary><category term="API"></category><category term="RSS"></category><category term="Twitter"></category><category term="Zapier"></category><category term="automation"></category></entry><entry><title>Writing better Javascript code even when you're not a rockstar</title><link href="http://zemanel.eu/writing-better-code-even-when-youre-not-a-rockstar.html" rel="alternate"></link><updated>2013-04-19T01:00:00+01:00</updated><author><name>José Moreira</name></author><id>tag:zemanel.eu,2013-04-19:writing-better-code-even-when-youre-not-a-rockstar.html</id><summary type="html">&lt;p&gt;Even if you're not a rockstar developer, there are ways to easily produce better code while learning new tricks, using freely available tools that, aditionally, can automate source code inspections.&lt;/p&gt;
&lt;h3&gt;Improving Javascript source code with Google Closure Tools&lt;/h3&gt;
&lt;p&gt;There are several Javascript source code linters available. The one i have been working with is &lt;a href="https://developers.google.com/closure/utilities/"&gt;Closure Linter&lt;/a&gt; which is part of &lt;a href="https://developers.google.com/closure/"&gt;Google Closure Tools&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;About the Closure Linter&lt;/h4&gt;
&lt;p&gt;From &lt;a href="https://developers.google.com/closure/utilities/"&gt;https://developers.google.com/closure/utilities/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Closure Linter ensures that all of your project's JavaScript code follows the guidelines in the &lt;a href="http://google-styleguide.googlecode.com/svn/trunk/javascriptguide.xml"&gt;Google JavaScript Style Guide&lt;/a&gt;. It can also automatically fix many common errors, which saves you time and lets you focus on coding.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Closure Linter is a Python library that also adds a couple of command-line utilities to our toolbelt, &lt;code&gt;gjslint&lt;/code&gt; for Javascript source code linting and &lt;code&gt;fixjsstyle&lt;/code&gt; to automatically apply corrections to them.&lt;/p&gt;
&lt;h4&gt;Installing&lt;/h4&gt;
&lt;p&gt;The Closure Linter can be obtained on the Google Code project page, in the downloads section &lt;a href="https://code.google.com/p/closure-linter/downloads/"&gt;https://code.google.com/p/closure-linter/downloads/&lt;/a&gt;. It's a Python package, so let's use &lt;code&gt;pip&lt;/code&gt; to install it on a fresh Python virtual environment:&lt;/p&gt;
&lt;p&gt;Let's create a fresh virtual enviroment&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;zemanel@victory ? WorkDir  mkvirtualenv blogging&lt;/span&gt;
&lt;span class="go"&gt;New python executable in blogging/bin/python&lt;/span&gt;
&lt;span class="go"&gt;Installing setuptools............done.&lt;/span&gt;
&lt;span class="go"&gt;Installing pip...............done.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and &lt;code&gt;pip&lt;/code&gt; install the package&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="go"&gt;(blogging)zemanel@victory on WorkDir  pip install https://closure-linter.googlecode.com/files/closure_linter-latest.tar.gz&lt;/span&gt;
&lt;span class="go"&gt; Downloading/unpacking https://closure-linter.googlecode.com/files/closure_linter-latest.tar.gz&lt;/span&gt;
&lt;span class="go"&gt;  Downloading closure_linter-latest.tar.gz (88kB): 88kB downloaded&lt;/span&gt;
&lt;span class="go"&gt;  Running setup.py egg_info for package from https://closure-linter.googlecode.com/files/closure_linter-latest.tar.gz&lt;/span&gt;
&lt;span class="go"&gt; Downloading/unpacking python-gflags (from closure-linter==2.3.9)&lt;/span&gt;
&lt;span class="go"&gt;  Running setup.py egg_info for package python-gflags&lt;/span&gt;
&lt;span class="go"&gt; Installing collected packages: python-gflags, closure-linter&lt;/span&gt;
&lt;span class="go"&gt;  Running setup.py install for python-gflags&lt;/span&gt;
&lt;span class="go"&gt;  Running setup.py install for closure-linter&lt;/span&gt;
&lt;span class="go"&gt;    Installing fixjsstyle script to /Users/zemanel/.virtualenvs/blogging/bin&lt;/span&gt;
&lt;span class="go"&gt;    Installing gjslint script to /Users/zemanel/.virtualenvs/blogging/bin&lt;/span&gt;
&lt;span class="go"&gt; Successfully installed python-gflags closure-linter&lt;/span&gt;
&lt;span class="go"&gt; Cleaning up...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Improving a small script as an example&lt;/h4&gt;
&lt;p&gt;Our test script will be &lt;em&gt;CloudAppSelectAllItems.js&lt;/em&gt;, a &lt;a href="https://gist.github.com/zemanel/4974451"&gt;https://gist.github.com/zemanel/4974451&lt;/a&gt; i created to do mass deletion of uploads on &lt;a href="http://GetCloudApp.com"&gt;http://GetCloudApp.com&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt; * Checks all list items on http://getcloudapp.com upload list,&lt;/span&gt;
&lt;span class="cm"&gt; *  which is useful for multiple item deletion (AKA nuke the crap of all the uploads)&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; * License:&lt;/span&gt;
&lt;span class="cm"&gt; * José Moreira, in 2013 and beyond, doesn&amp;#39;t care what you do with this piece of code.&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ol#listing input[type=&amp;quot;checkbox&amp;quot;]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//  check all items&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;

&lt;span class="c1"&gt;// #1 click &amp;quot;Delete Selected&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;// #2 ...&lt;/span&gt;
&lt;span class="c1"&gt;// #3 Profit !&lt;/span&gt;
&lt;span class="c1"&gt;// #4 Refresh page or whatever&lt;/span&gt;
&lt;span class="c1"&gt;// #5 GOTO 1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's apply &lt;code&gt;gjslint&lt;/code&gt; to the script and behold, badly formatted code&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blogging&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;zemanel&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;victory&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;WorkDir&lt;/span&gt;  &lt;span class="n"&gt;gjslint&lt;/span&gt; &lt;span class="n"&gt;CloudAppSelectAllItems&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;
&lt;span class="o"&gt;-----&lt;/span&gt; &lt;span class="kt"&gt;FILE&lt;/span&gt;  &lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;zemanel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;WorkDir&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;CloudAppSelectAllItems&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt; &lt;span class="o"&gt;-----&lt;/span&gt;
&lt;span class="n"&gt;Line&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;E&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;0110&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Line&lt;/span&gt; &lt;span class="n"&gt;too&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;85&lt;/span&gt; &lt;span class="n"&gt;characters&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;
&lt;span class="n"&gt;Line&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;E&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;0001&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Extra&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;
&lt;span class="n"&gt;Line&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;E&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;0110&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Line&lt;/span&gt; &lt;span class="n"&gt;too&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;87&lt;/span&gt; &lt;span class="n"&gt;characters&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;
&lt;span class="n"&gt;Line&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;E&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;0001&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Extra&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;
&lt;span class="n"&gt;Line&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;E&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;0002&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Missing&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt; &lt;span class="n"&gt;before&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;{&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;Line&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;E&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;0002&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Missing&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt; &lt;span class="n"&gt;before&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;=&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;Line&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;E&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;0002&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Missing&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt; &lt;span class="n"&gt;after&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;=&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;Line&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;E&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;0001&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Extra&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;
&lt;span class="n"&gt;Found&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;including&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="n"&gt;OK&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;

&lt;span class="n"&gt;Some&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt; &lt;span class="n"&gt;reported&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;GJsLint&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fixable&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;script&lt;/span&gt;
&lt;span class="n"&gt;fixjsstyle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="n"&gt;any&lt;/span&gt; &lt;span class="n"&gt;changes&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;makes&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;report&lt;/span&gt; &lt;span class="n"&gt;any&lt;/span&gt; &lt;span class="n"&gt;bugs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt;
&lt;span class="n"&gt;script&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;executing&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;

&lt;span class="n"&gt;fixjsstyle&lt;/span&gt; &lt;span class="n"&gt;CloudAppSelectAllItems&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It analyzed our script and warned about 8 errors. At this point we can either apply the corrections ourselves and iterate until it's all good or, as stated on the last message, we can apply &lt;code&gt;fixjsstyle&lt;/code&gt; to it. Let's try that&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blogging&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;zemanel&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;victory&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;WorkDir&lt;/span&gt;  &lt;span class="n"&gt;fixjsstyle&lt;/span&gt; &lt;span class="n"&gt;CloudAppSelectAllItems&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;
&lt;span class="n"&gt;Fixed&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;zemanel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;WorkDir&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;CloudAppSelectAllItems&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can see that 6 of the 8 errors were corrected automatically by the script. Re-running the linter we get:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blogging&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;zemanel&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;victory&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;WorkDir&lt;/span&gt;  &lt;span class="n"&gt;fixjsstyle&lt;/span&gt; &lt;span class="n"&gt;CloudAppSelectAllItems&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;
&lt;span class="n"&gt;Fixed&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;zemanel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;WorkDir&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;CloudAppSelectAllItems&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blogging&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;zemanel&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;victory&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;WorkDir&lt;/span&gt;  &lt;span class="n"&gt;gjslint&lt;/span&gt; &lt;span class="n"&gt;CloudAppSelectAllItems&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;
&lt;span class="o"&gt;-----&lt;/span&gt; &lt;span class="kt"&gt;FILE&lt;/span&gt;  &lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;zemanel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;WorkDir&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;CloudAppSelectAllItems&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt; &lt;span class="o"&gt;-----&lt;/span&gt;
&lt;span class="n"&gt;Line&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;E&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;0110&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Line&lt;/span&gt; &lt;span class="n"&gt;too&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;85&lt;/span&gt; &lt;span class="n"&gt;characters&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;
&lt;span class="n"&gt;Line&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;E&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;0110&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Line&lt;/span&gt; &lt;span class="n"&gt;too&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;87&lt;/span&gt; &lt;span class="n"&gt;characters&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;
&lt;span class="n"&gt;Found&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;including&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="n"&gt;OK&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;

&lt;span class="n"&gt;Some&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt; &lt;span class="n"&gt;reported&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;GJsLint&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="k"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fixable&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;script&lt;/span&gt;
&lt;span class="n"&gt;fixjsstyle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="n"&gt;any&lt;/span&gt; &lt;span class="n"&gt;changes&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;makes&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;report&lt;/span&gt; &lt;span class="n"&gt;any&lt;/span&gt; &lt;span class="n"&gt;bugs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt;
&lt;span class="n"&gt;script&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;executing&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;

&lt;span class="n"&gt;fixjsstyle&lt;/span&gt; &lt;span class="n"&gt;CloudAppSelectAllItems&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The remaning warnings are related to 80 column line length. After manual editing the javascript source, we have this result&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt; * Checks all list items on http://getcloudapp.com upload list,&lt;/span&gt;
&lt;span class="cm"&gt; *  which is useful for multiple item deletion (AKA nuke the crap of&lt;/span&gt;
&lt;span class="cm"&gt; *  all the uploads)&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; * License:&lt;/span&gt;
&lt;span class="cm"&gt; * José Moreira, in 2013 and beyond, doesn&amp;#39;t care what you do with&lt;/span&gt;
&lt;span class="cm"&gt; * this piece of code.&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ol#listing input[type=&amp;quot;checkbox&amp;quot;]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//  check all items&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;

&lt;span class="c1"&gt;// #1 click &amp;quot;Delete Selected&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;// #2 ...&lt;/span&gt;
&lt;span class="c1"&gt;// #3 Profit !&lt;/span&gt;
&lt;span class="c1"&gt;// #4 Refresh page or whatever&lt;/span&gt;
&lt;span class="c1"&gt;// #5 GOTO 1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Can you spot the differences ? Now imagine "finding Wally" on a 1k LOC file. Running the linting tool again, we're in the clear&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blogging&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;zemanel&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;victory&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;WorkDir&lt;/span&gt;  &lt;span class="n"&gt;gjslint&lt;/span&gt; &lt;span class="n"&gt;CloudAppSelectAllItems&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="n"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Obviously this was a very simple, with hardly noticeable differentes between versions, but here's a &lt;code&gt;diff -u&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gd"&gt;--- CloudAppSelectAllItems.js   2013-04-19 02:50:56.000000000 +0100&lt;/span&gt;
&lt;span class="gi"&gt;+++ CloudAppSelectAllItems-linted.js    2013-04-19 02:53:05.000000000 +0100&lt;/span&gt;
&lt;span class="gu"&gt;@@ -1,18 +1,20 @@&lt;/span&gt;
 /*
  * Checks all list items on http://getcloudapp.com upload list,
&lt;span class="gd"&gt;- *  which is useful for multiple item deletion (AKA nuke the crap of all the uploads)&lt;/span&gt;
&lt;span class="gd"&gt;- *&lt;/span&gt;
&lt;span class="gi"&gt;+ *  which is useful for multiple item deletion (AKA nuke the crap of&lt;/span&gt;
&lt;span class="gi"&gt;+ *  all the uploads)&lt;/span&gt;
&lt;span class="gi"&gt;+ *&lt;/span&gt;
  * License:
&lt;span class="gd"&gt;- * José Moreira, in 2013 and beyond, doesn&amp;#39;t care what you do with this piece of code.&lt;/span&gt;
&lt;span class="gd"&gt;- *&lt;/span&gt;
&lt;span class="gi"&gt;+ * José Moreira, in 2013 and beyond, doesn&amp;#39;t care what you do with&lt;/span&gt;
&lt;span class="gi"&gt;+ * this piece of code.&lt;/span&gt;
&lt;span class="gi"&gt;+ *&lt;/span&gt;
  */

&lt;span class="gd"&gt;-(function(){&lt;/span&gt;
&lt;span class="gi"&gt;+(function() {&lt;/span&gt;
     var items = $$(&amp;#39;ol#listing input[type=&amp;quot;checkbox&amp;quot;]&amp;#39;);
     if (items.length &amp;amp;&amp;amp; items.length &amp;gt;= 0) {
         //  check all items
         var i;
&lt;span class="gd"&gt;-        for (i=0; i &amp;lt; items.length; i++) {&lt;/span&gt;
&lt;span class="gi"&gt;+        for (i = 0; i &amp;lt; items.length; i++) {&lt;/span&gt;
             items[i].click();
         }
     }
&lt;span class="gu"&gt;@@ -22,4 +24,4 @@&lt;/span&gt;
 // #2 ...
 // #3 Profit !
 // #4 Refresh page or whatever
&lt;span class="gd"&gt;-// #5 GOTO 1&lt;/span&gt;
&lt;span class="gi"&gt;+// #5 GOTO 1&lt;/span&gt;
&amp;gt; // #5 GOTO 1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The script can also be customized with command-line parameters, for which the list can be obtained with &lt;code&gt;gjslint --help&lt;/code&gt; and can check even JSDoc validity.&lt;/p&gt;
&lt;p&gt;The case in point is that an apparently simple script, triggered 8 violations of the formatting coding standard. Automating the linting process as part of a development workflow either manually, through source control hooks or CI automated builds, will greatly increase the quality of any project, at a very small cost.&lt;/p&gt;</summary><category term="code-better"></category><category term="javascript"></category></entry><entry><title>Hello World.</title><link href="http://zemanel.eu/hello-world.html" rel="alternate"></link><updated>2013-04-18T06:00:00+01:00</updated><author><name>José Moreira</name></author><id>tag:zemanel.eu,2013-04-18:hello-world.html</id><summary type="html">&lt;p&gt;With Python 2.x&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;hello again!&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With Python 3.x&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;hello again!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With Javacript on the browser&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello again&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With Node.js&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello again&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Starting a new blog based on &lt;a href="http://getpelican.com"&gt;Pelican&lt;/a&gt; and will import some older posts from my old Posterous-dead website.&lt;/p&gt;
&lt;p&gt;I'm a Python/Javascript developer, Linux/OSX lover with a thing for devops. There are some cool posts i intend to write, for example how to write better code when you're not a rockstar, how to run applications on &lt;a href="http://openshift.com"&gt;OpenShift&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'm also a Django developer (write web applications with Django, not a commiter) and love &lt;a href="http://dojotoolkit.com"&gt;Dojo Toolkit&lt;/a&gt;, so i hope to write more about those as well.&lt;/p&gt;
&lt;p&gt;That is all, have fun!&lt;/p&gt;</summary><category term="no-real-content-yet-dept"></category></entry><entry><title>Today is Programmer's Day</title><link href="http://zemanel.eu/today-is-programmers-day.html" rel="alternate"></link><updated>2010-09-13T18:17:00+01:00</updated><author><name>José Moreira</name></author><id>tag:zemanel.eu,2010-09-13:today-is-programmers-day.html</id><summary type="html">&lt;p&gt;Today is Programmer's Day &lt;a href="http://en.wikipedia.org/wiki/Programmers_Day"&gt;http://en.wikipedia.org/wiki/Programmers_Day&lt;/a&gt;&lt;/p&gt;</summary><category term="special-day"></category></entry></feed>